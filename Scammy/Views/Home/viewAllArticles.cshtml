@model IEnumerable<Scammy.Models.Article>

@{
    ViewBag.Title = "All Articles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/assets/css/viewAllArticles.css" />
}



<!-- Filter and Search Section -->
<section class="articles-filter">
    <div class="container">
        <div class="filter-container">
            <div class="search-section">
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" id="articleSearch" placeholder="Search articles, topics, or keywords...">
                </div>
            </div>

            <div class="filter-section">
                <div class="filter-group">
                    <label>Category:</label>
                    <select id="categoryFilter">
                        <option value="">All Categories</option>

                       
                        <option value="AI Voice Cloning Scams">AI Voice Cloning Scams</option>
                        <option value="Deepfake Video Scams">Deepfake Video Scams</option>
                        <option value="AI-Generated Phishing">AI-Generated Phishing</option>

                       
                        <option value="Imposter Scams">Imposter Scams</option>
                        <option value="Investment/Crypto Scams">Investment/Crypto Scams</option>
                        <option value="Romance Scams (Pig Butchering)">Romance Scams (Pig Butchering)</option>
                        <option value="Business Email Compromise">Business Email Compromise</option>

                        
                        <option value="Social Media Scams">Social Media Scams</option>
                        <option value="Email Phishing">Email Phishing</option>
                        <option value="SMS/Text Scams">SMS/Text Scams</option>
                        <option value="Task/Work-From-Home Scams">Task/Work-From-Home Scams</option>
                        <option value="Online Shopping Scams">Online Shopping Scams</option>
                        <option value="Fake Tech Support">Fake Tech Support</option>

                       
                        <option value="Bank Transfer Frauds">Bank Transfer Frauds</option>
                        <option value="Payment App Scams">Payment App Scams</option>
                        <option value="Credit Card Scams">Credit Card Scams</option>
                        <option value="Loan/Debt Relief Scams">Loan/Debt Relief Scams</option>

                       
                        <option value="Phone/Robocall Scams">Phone/Robocall Scams</option>
                        <option value="Government Impersonation">Government Impersonation</option>
                        <option value="Healthcare/Medicare Scams">Healthcare/Medicare Scams</option>
                        <option value="Charity Scams">Charity Scams</option>

                       
                        <option value="Identity Theft">Identity Theft</option>
                        <option value="Account Takeover">Account Takeover</option>
                        <option value="Synthetic Identity Fraud">Synthetic Identity Fraud</option>

                       
                        <option value="Real Estate Wire Fraud">Real Estate Wire Fraud</option>
                        <option value="Utility Scams">Utility Scams</option>
                        <option value="Travel/Vacation Scams">Travel/Vacation Scams</option>
                        <option value="Elder Fraud">Elder Fraud</option>

                        
                        <option value="General Awareness">General Awareness</option>
                        <option value="Emerging Threats">Emerging Threats</option>
                        <option value="Others">Others</option>
                    </select>
                </div>

                <div class="filter-group">
                    <label>Sort by:</label>
                    <select id="sortFilter">
                        <option value="newest">Newest First</option>
                        <option value="oldest">Oldest First</option>
                        <option value="title">Title A-Z</option>
                        <option value="category">Category</option>
                    </select>
                </div>

                <div class="view-toggle">
                    <button class="view-btn active" data-view="grid" title="Grid View">
                        <i class="fas fa-th-large"></i>
                    </button>
                    <button class="view-btn" data-view="list" title="List View">
                        <i class="fas fa-list"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Articles Section -->
<section class="articles-content">
    <div class="container">
        <div class="articles-header">
            <h2>All Articles</h2>
            <span id="articlesCount">Showing @(Model?.Count() ?? 0) articles</span>
        </div>

        <div class="articles-grid" id="articlesContainer">
            @if (Model != null && Model.Any())
            {
                @foreach (var article in Model.OrderByDescending(a => a.CreatedAt))
                {
                    var random = new Random();
                    var readTime = random.Next(5, 15);
                    

                    <article class="article-card"
                             data-category="@article.Category"
                             data-title="@article.Title.ToLower()"
                             data-content="@(article.Content?.ToLower() ?? "")"
                             data-date="@article.CreatedAt.ToString("yyyy-MM-ddTHH:mm:ss")">

                        <div class="article-image">
                            @if (!string.IsNullOrEmpty(article.ImagePath))
                            {
                                <img src="@article.ImagePath" alt="@article.Title" loading="lazy">
                            }
                            else
                            {
                                <div class="image-placeholder">
                                    <i class="fas fa-newspaper"></i>
                                </div>
                            }
                            <div class="article-overlay">
                                <span class="category-badge">@article.Category</span>
                            </div>
                        </div>

                        <div class="article-content">
                            <div class="article-meta">
                                <div class="meta-left">
                                    <span class="author">
                                        <i class="fas fa-user"></i>
                                        @article.Author
                                    </span>
                                    <span class="date">
                                        <i class="fas fa-calendar"></i>
                                        @article.CreatedAt.ToString("MMM dd, yyyy")
                                    </span>
                                </div>
                                <div class="meta-right">
                                    <span class="read-time">
                                        <i class="fas fa-clock"></i>
                                        @readTime min read
                                    </span>
                                    
                                </div>
                            </div>

                            <h3 class="article-title">
                                <a href="@Url.Action("ReadArticle", "Articles", new { id = article.Id, slug = article.Title.Replace(" ", "-").ToLower() })">
                                    @article.Title
                                </a>
                            </h3>

                            <p class="article-excerpt">@article.Excerpt</p>

                            @if (!string.IsNullOrEmpty(article.Tags) && article.Tags != "none")
                            {
                                <div class="article-tags">
                                    @foreach (var tag in article.Tags.Split(',').Take(3))
                                    {
                                        <span class="tag">#@tag.Trim()</span>
                                    }
                                </div>
                            }

                            <div class="article-footer">
                                <a href="@Url.Action("ReadArticles", "Home", new { id = article.Id, slug = article.Title.Replace(" ", "-").ToLower() })"
                                   class="read-more-btn">
                                    <span>Read Full Article</span>
                                    <i class="fas fa-arrow-right"></i>
                                </a>

                                <div class="article-actions">
                                   
                                    <button class="action-btn share" title="Share" onclick="shareArticle('@article.Title', '@Url.Action("ReadArticle", "Articles", new { id = article.Id })')">
                                        <i class="fas fa-share-alt"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </article>
                }
            }
            else
            {
                <div class="no-articles">
                    <div class="no-articles-icon">
                        <i class="fas fa-newspaper"></i>
                    </div>
                    <h3>No Articles Found</h3>
                    <p>There are no articles available at the moment. Please check back later.</p>
                </div>
            }
        </div>

        <!-- Load More Button -->
        <div class="load-more-section" id="loadMoreSection" style="display: none;">
            <button class="load-more-btn" id="loadMoreBtn">
                <span>Load More Articles</span>
                <i class="fas fa-chevron-down"></i>
            </button>
        </div>

        <!-- Back to Top Button -->
        <button class="back-to-top" id="backToTop" title="Back to Top">
            <i class="fas fa-chevron-up"></i>
        </button>
    </div>
</section>



@section Scripts {
    <script src="~/assets/js/viewAllArticles.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        $(document).ready(function() {
            let lastScrollTop = 0;
            let headerFixed = false;

            function resetHeader() {
                $('.header-area, .background-header').removeAttr('style');
                $('.header-area .main-nav').removeAttr('style');
                $('.header-area .main-nav .nav').removeAttr('style');
                $('.header-area .main-nav .nav li').removeAttr('style');
                $('.dropdown-menu, .submenu ul, .dropdown, .submenu').removeAttr('style');
            }

            // Scroll handler
            $(window).scroll(function() {
                let scrollTop = $(this).scrollTop();

                if (scrollTop < 200 && !headerFixed) {
                    resetHeader();
                } else if (scrollTop > 200) {
                    headerFixed = false;
                }

                lastScrollTop = scrollTop;
            });

           
            resetHeader();

            
            $(document).on('click', function() {
                if (!headerFixed) {
                    setTimeout(resetHeader, 100);
                }
            });

           
            setInterval(function() {
                if ($(window).scrollTop() < 200) {
                    resetHeader();
                }
            }, 5000);
        });
    </script>
}