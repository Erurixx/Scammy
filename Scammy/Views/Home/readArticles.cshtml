@model Scammy.Models.Article

@{
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var readTime = new Random().Next(5, 15);
    var views = new Random().Next(500, 8000);
}

@section Styles {
    <link rel="stylesheet" href="~/assets/css/readArticles.css" />
    <link href="https://fonts.googleapis.com/css2?family=Crimson+Text:ital,wght@0,400;0,600;1,400&display=swap" rel="stylesheet">
}

<!-- Progress Bar -->
<div class="reading-progress">
    <div class="progress-bar" id="progressBar"></div>
</div>

<!-- Navigation Breadcrumb -->
<nav class="article-breadcrumb">
    <div class="container">
        <ol class="breadcrumb">
            <li><a href="@Url.Action("Index", "Home")">Home</a></li>
            <li><a href="@Url.Action("ViewAllArticles", "Home")">Articles</a></li>
            <li><span class="category">@Model.Category</span></li>
            <li class="current">@Model.Title</li>
        </ol>
    </div>
</nav>

<!-- Article Header -->
<header class="article-header">
    <div class="container">
        <div class="article-header-content">
            <div class="category-badge">@Model.Category</div>
            <h1 class="article-title">@Model.Title</h1>
            <p class="article-subtitle">@Model.Excerpt</p>

            <div class="article-meta">
                <div class="author-info">
                    <div class="author-avatar">
                        <i class="fas fa-user"></i>
                    </div>
                    <div class="author-details">
                        <strong class="author-name">@Model.Author</strong>
                        
                    </div>
                </div>

                <div class="article-stats">
                    <span class="stat">
                        <i class="fas fa-calendar"></i>
                        @Model.CreatedAt.ToString("MMMM dd, yyyy")
                    </span>
                    <span class="stat">
                        <i class="fas fa-clock"></i>
                        @readTime min read
                    </span>
                   
                </div>
            </div>

            <div class="article-actions">
               
                <button class="action-btn share-btn" id="shareBtn" title="Share this article">
                    <i class="fas fa-share-alt"></i>
                    <span>Share</span>
                </button>
                <button class="action-btn print-btn" onclick="window.print()" title="Print article">
                    <i class="fas fa-print"></i>
                    <span>Print</span>
                </button>
            </div>
        </div>
    </div>
</header>

<!-- Article Content -->
<main class="article-main">
    <div class="container">
        <div class="article-layout">
            <!-- Table of Contents (if needed) -->
            <aside class="table-of-contents" id="tableOfContents">
                <div class="toc-header">
                    <h3>Related Articles</h3>
                    <button class="toc-toggle" id="tocToggle">
                        <i class="fas fa-chevron-up"></i>
                    </button>
                </div>
                <nav class="toc-nav" id="tocNav" data-articles='@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.RelatedArticles))'>
                    <!-- Generated dynamically by JavaScript -->
                </nav>
            </aside>

            <!-- Main Article Content -->
            <article class="article-content">
                <!-- Article Image -->
                @if (!string.IsNullOrEmpty(Model.ImagePath))
                {
                    <div class="article-image-container">
                        <img src="@Model.ImagePath" alt="@Model.Title" class="article-image">
                        <div class="image-caption">
                            <span>@Model.Title illustration</span>
                        </div>
                    </div>
                }

                <!-- Article Body -->
                <div class="article-body">
                    @Html.Raw(Model.Content?.Replace("\n", "<br>"))
                </div>

                <!-- Article Tags -->
                @if (!string.IsNullOrEmpty(Model.Tags) && Model.Tags != "none")
                {
                    <div class="article-tags">
                        <h4>Tags:</h4>
                        <div class="tags-list">
                            @foreach (var tag in Model.Tags.Split(','))
                            {
                                <span class="tag">#@tag.Trim()</span>
                            }
                        </div>
                    </div>
                }

                
            </article>

            <!-- Reading Tools Sidebar -->
            <aside class="reading-tools">
                <div class="tools-sticky">
                    <button class="tool-btn" id="fontSizeBtn" title="Adjust font size">
                        <i class="fas fa-text-height"></i>
                    </button>
                    <button class="tool-btn" id="darkModeBtn" title="Toggle dark mode">
                        <i class="fas fa-moon"></i>
                    </button>
                    
                    <button class="tool-btn" onclick="window.print()" title="Print">
                        <i class="fas fa-print"></i>
                    </button>
                </div>
            </aside>
        </div>
    </div>
</main>



<!-- Back to Articles -->
<div class="back-to-articles">
    <div class="container">
        <a href="@Url.Action("viewAllArticles", "Home")" class="back-btn">
            <i class="fas fa-arrow-left"></i>
            <span>Back to All Articles</span>
        </a>
    </div>
</div>

<!-- Font Size Modal -->
<div id="fontSizeModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Reading Preferences</h3>
            <button class="close-btn" onclick="closeFontModal()">&times;</button>
        </div>
        <div class="modal-body">
            <div class="preference-group">
                <label>Font Size:</label>
                <div class="font-size-options">
                    <button class="size-btn" data-size="small">A</button>
                    <button class="size-btn active" data-size="medium">A</button>
                    <button class="size-btn" data-size="large">A</button>
                    <button class="size-btn" data-size="extra-large">A</button>
                </div>
            </div>
            <div class="preference-group">
                <label>Font Family:</label>
                <select id="fontFamilySelect">
                    <option value="crimson">Crimson Text (Default)</option>
                    <option value="georgia">Georgia</option>
                    <option value="times">Times New Roman</option>
                    <option value="arial">Arial</option>
                </select>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/assets/js/readArticles.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        $(document).ready(function() {
            let lastScrollTop = 0;
            let headerFixed = false;

            function resetHeader() {
                $('.header-area, .background-header').removeAttr('style');
                $('.header-area .main-nav').removeAttr('style');
                $('.header-area .main-nav .nav').removeAttr('style');
                $('.header-area .main-nav .nav li').removeAttr('style');
                $('.dropdown-menu, .submenu ul, .dropdown, .submenu').removeAttr('style');
            }

            // Scroll handler
            $(window).scroll(function() {
                let scrollTop = $(this).scrollTop();

                if (scrollTop < 200 && !headerFixed) {
                    resetHeader();
                } else if (scrollTop > 200) {
                    headerFixed = false;
                }

                lastScrollTop = scrollTop;
            });

            // Also reset header on page load
            resetHeader();

            // Reset header after any clicks on the page
            $(document).on('click', function() {
                if (!headerFixed) {
                    setTimeout(resetHeader, 100);
                }
            });

            // Force header reset every 5 seconds
            setInterval(function() {
                if ($(window).scrollTop() < 200) {
                    resetHeader();
                }
            }, 5000);
        });
    </script>
}