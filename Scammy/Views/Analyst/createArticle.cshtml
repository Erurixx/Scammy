@{
    ViewBag.Title = "Create Article";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles {
    <link rel="stylesheet" href="~/assets/css/addArticles.css" />
}





<!-- Main Content -->
<div class="az-dashboard-nav" style="margin-top: 8rem; margin-bottom: -7rem;">
    <nav class="nav">
        <a class="nav-link" href="@Url.Action("dashboard", "Analyst")">Overview</a>

       
        <a class="nav-link" href="@Url.Action("ViewPublishedArticles", "Analyst")">View/Manage Articles</a>

        @{
            var createActive = ViewBag.ActivePage == "createArticle" ? "active" : "";
        }
        <a class="nav-link @createActive" href="@Url.Action("createArticle", "Analyst")">
            Create New Article +
        </a>
    </nav>
</div>





<form id="articleForm"
      asp-action="@(Model?.Id > 0 ? "EditArticle" : "createArticle")"
      asp-controller="Analyst"
      method="post"
      enctype="multipart/form-data">
    @if (Model?.Id > 0)
    {
        <input type="hidden" name="Id" value="@Model.Id" />
    }

    

<div class="main-content">
    <!-- Left Panel - Content -->
    <div class="left-panel">
        <div class="panel-header">
            <h2 style="font-size: 18px; font-weight: 600; color: #111827;">Article Content</h2>
        </div>
        <div class="panel-content">
            <div class="form-group">
                <label class="form-label" for="title">Article Title *</label>
                    <input type="text" id="title" name="Title" class="form-input" value="@Model?.Title"/>
                <div class="error-text hidden" id="titleError">Title is required</div>
            </div>

            <div class="form-group">
                <label class="form-label" for="excerpt">Excerpt * <span style="color: #6b7280; font-weight: 400;">(Brief summary for article previews)</span></label>
                    <textarea id="excerpt" name="Excerpt" class="form-textarea" rows="3" maxlength="200" placeholder="Write a brief excerpt that summarizes your article (max 200 characters)">@Model?.Excerpt</textarea>
                <div class="char-counter">
                    <span id="excerptCount">0</span>/200
                </div>
                <div class="error-text hidden" id="excerptError">Excerpt is required</div>
            </div>

            <div class="form-group">
                <label class="form-label" for="content">Content *</label>
                    <textarea id="content" name="Content" class="form-textarea" rows="15" placeholder="Write your article content here. You can use markdown formatting...">@Model?.Content</textarea>
                <div class="error-text hidden" id="contentError">Content is required</div>
                <div style="margin-top: 8px; font-size: 12px; color: #6b7280;">
                    💡 Tip: You can use markdown formatting (**, *, ##, etc.) for rich text
                </div>
            </div>
        </div>
    </div>

    <!-- Right Panel - Details -->
    <div class="right-panel">
        <div class="panel-header">
            <h2 style="font-size: 18px; font-weight: 600; color: #111827;">Article Details</h2>
        </div>
        <div class="panel-content">
            <div class="grid-2">
                <div class="form-group">
                    <label class="form-label" name="Category" for="category">Category *</label>
                    
                        @{
                            var categories = new List<string>
                                                {
                                                "Phone Scams", "Email Scams", "Social Media Scams", "Investment Scams",
                                                "Romance Scams", "Tech Support Scams", "Shopping Scams",
                                                "Cryptocurrency Scams", "Identity Theft", "General Awareness"
                                                };
                        }
                        <select id="category" name="Category" class="form-select" required>
                            <option value="">Select category</option>
                            @foreach (var cat in categories)
                            {
                                if (Model?.Category == cat)
                                {
                                    @:
                                    <option value="@cat" selected>@cat</option>
                                }
                                else
                                {
                                    @:
                                    <option value="@cat">@cat</option>
                                }
                            } 
                            </select>
                    <div class="error-text hidden" id="categoryError">Category is required</div>
                </div>

                <div class="form-group">
                    <label class="form-label" name="Author" for="author">Author</label>
                        <input type="text" id="author" class="form-input" value="@Model?.Author" readonly style="background: #f9fafb;">
                </div>
            </div>

            <div class="form-group">
                <label class="form-label">Article Image*</label>
                <div class="file-upload" onclick="document.getElementById('imageUpload').click()">
                    <input type="file" id="imageUpload" name="imageFile" accept="image/*">
                    <svg class="file-upload-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" />
                        <polyline points="17,8 12,3 7,8" />
                        <line x1="12" y1="3" x2="12" y2="15" />
                    </svg>
                    <div class="file-upload-text">Click to upload an image</div>
                    <div class="file-upload-subtext">PNG, JPG, GIF up to 10MB</div>
                    <div class="file-success hidden" id="imageSuccess">✓ Image uploaded successfully</div>
                    <div class="file-name hidden" id="fileName">Selected: </div>

                        <!-- Image preview -->
                        <img id="imagePreview" class="hidden" alt="Preview" />
                </div>
            </div>

            <div class="form-group">
                <label class="form-label" name="Tags" for="tags">Tags <span style="color: #6b7280; font-weight: 400;">(Comma-separated)</span></label>
                    <input type="text" id="tags" name="Tags" class="form-input" value="@Model?.Tags" placeholder="e.g. phishing, email, awareness, prevention">
            </div>

                <div class="alert">
                    <i class="fa fa-exclamation-circle alert-icon"></i>
                    Articles need admin approval before publishing
                </div>

            <div class="form-group">
                <label class="form-label" for="status">Status</label>
                <select id="status" name="Status" class="form-select">
                    <option value="draft">Draft</option>
                    <option value="pending">Submit for Review</option>
                </select>
            </div>
        </div>
    </div>
</div>

<!-- Submit Section -->
<div class="submit-section">
    <div style="display: flex; align-items: center; gap: 12px;">
            <input type="hidden" id="submitAction" name="submitAction" />
            
        <span style="font-weight: 500; color: #374151;">Ready to publish?</span>
        <span style="font-size: 14px; color: #6b7280;">Your article will be reviewed by admin first.</span>
    </div>
    <div style="display: flex; gap: 12px;">
            <button type="submit" class="btn btn-secondary" id="saveDraftBtn">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z" />
                <polyline points="17,21 17,13 7,13 7,21" />
                <polyline points="7,3 7,8 15,8" />
            </svg>
            Save Draft
        </button>
            <button type="submit" class="btn btn-primary" id="submitArticleBtn">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z" />
                <polyline points="14,2 14,8 20,8" />
                <line x1="16" y1="13" x2="8" y2="13" />
                <line x1="16" y1="17" x2="8" y2="17" />
                <polyline points="10,9 9,9 8,9" />
            </svg>
            Submit Article
        </button>
    </div>
</div>

    


</form>

@section Scripts {
    <!-- Scripts -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function showToast(message, type = 'info') {
            const toast = document.createElement('div');
            toast.className = `toast toast-${type}`;
            toast.innerHTML = `
                <div class="toast-content">
                    <i class="fas fa-${getToastIcon(type)}"></i>
                    <span>${message}</span>
                </div>
            `;
            if (!document.querySelector('.toast-styles')) {
                const styles = document.createElement('style');
                styles.className = 'toast-styles';
                styles.textContent = `
                    .toast {
                        position: fixed;
                        top: 130px;
                        right: 20px;
                        background: white;
                        border-radius: 8px;
                        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
                        z-index: 10000;
                        transform: translateX(100%);
                        transition: transform 0.3s ease;
                        border-left: 4px solid;
                    }
                    .toast.show { transform: translateX(0); }
                    .toast-success { border-left-color: #10b981; }
                    .toast-error { border-left-color: #ef4444; }
                    .toast-info { border-left-color: #3b82f6; }
                    .toast-content {
                        padding: 16px 20px;
                        display: flex;
                        align-items: center;
                        gap: 12px;
                        color: #374151;
                    }
                    .toast-success .toast-content i { color: #10b981; }
                    .toast-error .toast-content i { color: #ef4444; }
                    .toast-info .toast-content i { color: #3b82f6; }
                `;
                document.head.appendChild(styles);
            }
            document.body.appendChild(toast);
            setTimeout(() => toast.classList.add('show'), 100);
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300);
            }, 3000);
        }

        function getToastIcon(type) {
            const icons = {
                success: 'check-circle',
                error: 'exclamation-circle',
                info: 'info-circle'
            };
            return icons[type] || 'info-circle';
        }

        
        @if (TempData["SuccessMessage"] != null)
        {
                <text>
                    window.addEventListener("DOMContentLoaded", function() {
                        showToast("@TempData["SuccessMessage"]", "success");
                    });
                </text>
        }

            
        
            $(document).ready(function() {
                let lastScrollTop = 0;
                let headerFixed = false;


                function resetHeader() {

                    $('.header-area, .background-header').removeAttr('style');
                    $('.header-area .main-nav').removeAttr('style');
                    $('.header-area .main-nav .nav').removeAttr('style');
                    $('.header-area .main-nav .nav li').removeAttr('style');
                    $('.dropdown-menu, .submenu ul, .dropdown, .submenu').removeAttr('style');


                }

                // Scroll handler
                $(window).scroll(function() {
                    let scrollTop = $(this).scrollTop();

                    // Reset header when scrolling back to top
                    if (scrollTop < 200 && !headerFixed) {
                        resetHeader();
                    } else if (scrollTop > 200) {
                        headerFixed = false;
                    }

                    lastScrollTop = scrollTop;
                });

                // Also reset header on page load
                resetHeader();

                // Reset header after any clicks on the page
                $(document).on('click', function() {
                    if (!headerFixed) {
                        setTimeout(resetHeader, 100);
                    }
                });

                // Force header reset every 5 seconds (emergency backup)
                setInterval(function() {
                    if ($(window).scrollTop() < 200) {
                        resetHeader();
                    }
                }, 5000);
            });
    
    </script>


}


