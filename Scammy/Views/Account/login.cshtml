@model Scammy.ViewModels.LoginViewModel

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section id="login" class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                @if (TempData["RegisterSuccessMessage"] != null)
                {
                    <div class="alert alert-success" role="alert">
                        @TempData["RegisterSuccessMessage"]
                    </div>
                }

                @if (!ViewData.ModelState.IsValid)
                {
                    var errors = ViewData.ModelState.Values.SelectMany(v => v.Errors);
                    if (errors.Any())
                    {
                        <div class="alert alert-danger" role="alert">
                            @foreach (var error in errors)
                            {
                                <p>@error.ErrorMessage</p>
                            }
                        </div>
                    }
                }

                <h2 class="text-center mb-4">Login</h2>
                <div class="card-body">
                    @using (Html.BeginForm("Login", "Account", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group mb-3">
                            @Html.LabelFor(m => m.Email)
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Enter your email", type = "email", required = "required" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(m => m.Password)
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Enter your password", required = "required" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="text-center">
                            <button type="submit" class="btn btn-primary w-100">Login</button>
                        </div>

                        <div class="text-center mt-3">
                            <small>Don't have an account? <a href="@Url.Action("Register", "Account")">Register here</a></small>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        @if (TempData["SuccessMessage"] != null)
        {
                <text>
                    alert("@TempData["SuccessMessage"]");
                </text>
        }
        else if (!ViewData.ModelState.IsValid)
        {
                var errors = ViewData.ModelState.Values.SelectMany(v => v.Errors).Select(e => e.ErrorMessage);
                var errorMessages = string.Join("\\n", errors);
                if (!string.IsNullOrEmpty(errorMessages))
                {
                        <text>
                            alert("Login failed:\\n@errorMessages");
                        </text>
                }
        }
    </script>
}

