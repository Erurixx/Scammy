@model Scammy.ViewModels.RegisterViewModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section id="register" class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <h2 class="text-center mb-4">Register</h2>
                <div class="card-body">
                    @using (Html.BeginForm("Register", "Account", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group mb-3">
                            @Html.LabelFor(m => m.Username)
                            @Html.TextBoxFor(m => m.Username, new { @class = "form-control", placeholder = "Choose a username", required = "required" })
                            @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(m => m.Email)
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Enter your email", type = "email", required = "required" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(m => m.Password)
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Enter your password", required = "required" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(m => m.ConfirmPassword)
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Re-enter your password", required = "required" })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="text-center">
                            <button type="submit" class="btn btn-primary w-100">Register</button>
                        </div>

                        <div class="text-center mt-3">
                            <small>Already have an account? <a href="@Url.Action("Login", "Account")">Login here</a></small>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        @if (TempData["SuccessMessage"] != null)
        {
                <text>
                    alert("@TempData["SuccessMessage"]");
                    window.location.href = '@Url.Action("Login", "Account")';
                </text>
        }
    </script>
}
